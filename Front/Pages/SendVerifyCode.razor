@page "/send-verify-code"
@inject HttpClient Http
<h3>Register</h3>

@if (!isCodeSent)
{
    <EditForm OnValidSubmit="OnValid" style="max-width:500px;">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-2">
            <InputText class="form-control" @bind-Value="userName" placeholder="Enter Telegram UserName"></InputText>
        </div>
    </EditForm>
}
else
{
    <p>Enter the verification code:</p>
    <EditForm OnValidSubmit="OnCodeSubmitted" style="max-width:500px;">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-2">
            <InputText class="form-control" @bind-Value="verificationCode" placeholder="Enter Verification Code"></InputText>
        </div>
    </EditForm>
}

<button type="button" class="btn btn-primary" @onclick="SendCode" disabled="@isDisabled">Send Verification Code</button>

@code {
    string userName = string.Empty;
    string verificationCode = string.Empty;
    bool isDisabled = false;
    bool isCodeSent = false;

    private async Task OnValid()
    {
        isDisabled = true;
        using (var msg = await Http.GetAsync($"/auth/send-verify-code?userName={userName}", System.Threading.CancellationToken.None))
        {
            isCodeSent = msg.IsSuccessStatusCode;
        }
    }

    private async Task OnCodeSubmitted()
    {
    // Add code to handle the verification code submission
    // You can make a request to validate the code here
    }

    private void SendCode()
    {
        isCodeSent = false;
        isDisabled = false;
    }
}